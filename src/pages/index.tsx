import Head from 'next/head';
import Search from '~/components/Search';
import Header from '~/components/Header';
import AnimeCard from '~/components/AnimeCard';
import getAnime from '~/lib/anime';
import { Anime } from '~/lib/types';

import { useState } from 'react';

const Home = ({ animeList }: { animeList: Anime[] }) => {
  const [q, setQ] = useState<string>('');
  const [searchParams] = useState<(keyof Anime)[]>([
    'title',
    'title_english',
    'studio',
  ]);

  const search = () => {
    return animeList.filter((anime: Anime) => {
      return searchParams.some((property) => {
        return anime[property]
          ? anime[property]!.toString().toLowerCase().indexOf(q.toLowerCase()) >
              -1
          : 0;
      });
    });
  };

  return (
    <>
      <Head>
        <title>Shin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <main>
        <Header season={animeList[0].season} year={animeList[0].year} />

        <Search q={q} setQ={setQ} />
        <article className="grid grid-cols-article gap-6 mx-24 justify-center">
          {q &&
            search().map((anime) => {
              return <AnimeCard anime={anime} key={anime.mal_id} />;
            })}
          {!q &&
            animeList.map((anime) => {
              return <AnimeCard anime={anime} key={anime.mal_id} />;
            })}
        </article>
      </main>
    </>
  );
};

export async function getStaticProps() {
  const animeList = await getAnime();
  return {
    props: { animeList },
    revalidate: 3600000,
  };
}

export default Home;
